require('dotenv').config();

const {Client, IntentsBitField, EmbedBuilder, MessageFlags, ActivityType} = require('discord.js')

const client = new Client({
    intents: [
        IntentsBitField.Flags.Guilds,
        IntentsBitField.Flags.GuildMembers,
        IntentsBitField.Flags.GuildMessages,
        IntentsBitField.Flags.MessageContent,
    ],
});

client.on('ready', (c) => {
    console.log(`${c.user.tag} is online`)

    client.user.setActivity({
        name: "Doing",
        type: ActivityType.Custom,
        state: "Testing"
    })

});


client.on('interactionCreate', (interaction) => {
    if (!interaction.isChatInputCommand()) return;

    console.log(interaction.commandName);

    if (interaction.commandName === 'hey') {
        interaction.reply('hey!');
    }
    if (interaction.commandName === 'ping') {
        interaction.reply('pong!');
    }

    if (interaction.commandName === 'add') {
        const num1 = interaction.options.get('first-number').value;
        const num2 = interaction.options.get('second-number').value;

        interaction.reply(`The sum is ${num1 + num2}`)
        console.log(num1, num2)
    }

    if (interaction.commandName === 'embed') {
        const embed = new EmbedBuilder()
            .setTitle('Embed title')
            .setDescription('This is an embed description')
            .setColor('Random')
            .addFields({
                name: 'Field title', 
                value: 'Some random value', 
                inline: true,
            },
            {
                name: 'Second Field title', 
                value: 'Some random value', 
                inline: true,
            });

        
        interaction.reply({embeds: [embed]});
    }
})


client.on('messageCreate', (message) => {
    if (message.author.bot) {
        return;
    }

    if (message.content === 'hello'){
        message.reply('hello');
    }

    if (message.content === 'embed') {
        const embed = new EmbedBuilder()
            .setTitle('Embed title')
            .setDescription('This is an embed description')
            .setColor('Random')
            .addFields({
                name: 'Field title', 
                value: 'Some random value', 
                inline: true,
            },
            {
                name: 'Second Field title', 
                value: 'Some random value', 
                inline: true,
            });
        message.channel.send({embeds: [embed]});
        }
});

client.on('interactionCreate', async (interaction) => {
    try {
        if (!interaction.isButton()) return;
        await interaction.deferReply({ flags: MessageFlags.Ephemeral });

        const role = interaction.guild.roles.cache.get(interaction.customId);
        if (!role) {
            await interaction.editReply({
                content: "I couldn't find that role",
            });
            return;
        }

        const hasRole = interaction.member.roles.cache.has(role.id);

        if (hasRole) {
            await interaction.member.roles.remove(role);
            await interaction.editReply(`The role ${role} has been removed`);
            return;
        }

        await interaction.member.roles.add(role);
        await interaction.editReply(`The role ${role} has been added`);
    } catch (error) {
        console.log(error);
    }
});

client.login(process.env.TOKEN);